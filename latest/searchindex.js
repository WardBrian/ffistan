Search.setIndex({"alltitles": {"API Reference": [[14, "api-reference"], [15, "api-reference"], [16, "api-reference"], [17, "api-reference"]], "Arguments": [[5, "arguments"], [17, "arguments"]], "Author(s)": [[12, "author-s"]], "C API": [[14, "c-api"]], "Class tinystan_model": [[13, "class-tinystan-model"], [17, "class-tinystan-model"]], "Compilation utilities": [[15, "compilation-utilities"], [16, "compilation-utilities"], [17, "compilation-utilities"]], "Contents:": [[1, null]], "Details": [[5, "details"], [6, "details"], [11, "details"], [12, "details"], [17, "details"], [17, "id3"]], "Downloading TinyStan": [[0, "downloading-tinystan"]], "Downloading a released archive": [[0, "downloading-a-released-archive"]], "Enumeration HMCMetric": [[3, "enumeration-hmcmetric"], [17, "enumeration-hmcmetric"]], "Enumeration OptimizationAlgorithm": [[4, "enumeration-optimizationalgorithm"], [17, "enumeration-optimizationalgorithm"]], "Example Program": [[15, "example-program"], [16, "example-program"]], "Examples": [[10, "examples"], [13, "examples"], [17, "examples"], [17, "id1"]], "Format": [[3, "format"], [4, "format"], [17, "format"], [17, "id2"]], "From Source": [[15, "from-source"], [16, "from-source"], [17, "from-source"]], "From inside R": [[17, "from-inside-r"]], "Function compile_model()": [[5, "function-compile-model"], [17, "function-compile-model"]], "Function set_tinystan_path()": [[11, "function-set-tinystan-path"], [17, "function-set-tinystan-path"]], "Generic function laplace_sampler": [[7, "generic-function-laplace-sampler"], [17, "generic-function-laplace-sampler"]], "Generic function optimizer": [[8, "generic-function-optimizer"], [17, "generic-function-optimizer"]], "Generic function pathfinder": [[9, "generic-function-pathfinder"], [17, "generic-function-pathfinder"]], "Generic function sampler": [[10, "generic-function-sampler"], [17, "generic-function-sampler"]], "Get the path to TinyStan.": [[6, "get-the-path-to-tinystan"]], "Getting Started": [[0, "getting-started"]], "Inference outputs": [[16, "inference-outputs"]], "Installation": [[14, "installation"], [15, "installation"], [16, "installation"], [17, "installation"]], "Installing an Interface": [[0, "installing-an-interface"]], "Installing the latest version with git": [[0, "installing-the-latest-version-with-git"]], "Julia Interface": [[15, "julia-interface"]], "Language Interfaces": [[2, "language-interfaces"]], "Model interface": [[15, "model-interface"], [17, "model-interface"]], "Model object": [[16, "model-object"]], "Optional: Customizing TinyStan": [[0, "optional-customizing-tinystan"]], "Python Interface": [[16, "python-interface"]], "R Interface": [[17, "r-interface"]], "Requirement: C++ toolchain": [[0, "requirement-c-toolchain"]], "Returns": [[5, "returns"], [17, "returns"]], "See Also": [[5, "see-also"], [6, "see-also"], [17, "see-also"]], "Testing the Installation": [[0, "testing-the-installation"]], "TinyStan \u2013 A lightweight Stan interface": [[1, "tinystan-a-lightweight-stan-interface"]], "Using External C++ Code": [[0, "using-external-c-code"]], "Using Pre-Existing Stan Installations": [[0, "using-pre-existing-stan-installations"]], "tinystan: A tiny interface to Stan algorithms": [[12, "tinystan-a-tiny-interface-to-stan-algorithms"]]}, "docnames": ["getting-started", "index", "languages", "languages/_r/HMCMetric", "languages/_r/OptimizationAlgorithm", "languages/_r/compile_model", "languages/_r/get_tinystan_path", "languages/_r/laplace_sampler.tinystan_model", "languages/_r/optimizer.tinystan_model", "languages/_r/pathfinder.tinystan_model", "languages/_r/sampler.tinystan_model", "languages/_r/set_tinystan_path", "languages/_r/tinystan-package", "languages/_r/tinystan_model", "languages/c-api", "languages/julia", "languages/python", "languages/r"], "envversion": {"nbsphinx": 4, "sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["getting-started.rst", "index.rst", "languages.rst", "languages/_r/HMCMetric.md", "languages/_r/OptimizationAlgorithm.md", "languages/_r/compile_model.md", "languages/_r/get_tinystan_path.md", "languages/_r/laplace_sampler.tinystan_model.md", "languages/_r/optimizer.tinystan_model.md", "languages/_r/pathfinder.tinystan_model.md", "languages/_r/sampler.tinystan_model.md", "languages/_r/set_tinystan_path.md", "languages/_r/tinystan-package.md", "languages/_r/tinystan_model.md", "languages/c-api.rst", "languages/julia.md", "languages/python.rst", "languages/r.md"], "indexentries": {"api_version() (tinystan.model method)": [[16, "tinystan.Model.api_version", false]], "bfgs (tinystan.optimizationalgorithm attribute)": [[16, "tinystan.OptimizationAlgorithm.BFGS", false]], "compile_model() (in module tinystan)": [[16, "tinystan.compile_model", false]], "create_inits() (tinystan.stanoutput method)": [[16, "tinystan.StanOutput.create_inits", false]], "data (tinystan.stanoutput property)": [[16, "tinystan.StanOutput.data", false]], "dense (tinystan.hmcmetric attribute)": [[16, "tinystan.HMCMetric.DENSE", false]], "diagonal (tinystan.hmcmetric attribute)": [[16, "tinystan.HMCMetric.DIAGONAL", false]], "get() (tinystan.stanoutput method)": [[16, "tinystan.StanOutput.get", false]], "hmcmetric (class in tinystan)": [[16, "tinystan.HMCMetric", false]], "laplace_sample() (tinystan.model method)": [[16, "tinystan.Model.laplace_sample", false]], "lbfgs (tinystan.optimizationalgorithm attribute)": [[16, "tinystan.OptimizationAlgorithm.LBFGS", false]], "model (class in tinystan)": [[16, "tinystan.Model", false]], "newton (tinystan.optimizationalgorithm attribute)": [[16, "tinystan.OptimizationAlgorithm.NEWTON", false]], "optimizationalgorithm (class in tinystan)": [[16, "tinystan.OptimizationAlgorithm", false]], "optimize() (tinystan.model method)": [[16, "tinystan.Model.optimize", false]], "parameters (tinystan.stanoutput property)": [[16, "tinystan.StanOutput.parameters", false]], "pathfinder() (tinystan.model method)": [[16, "tinystan.Model.pathfinder", false]], "sample() (tinystan.model method)": [[16, "tinystan.Model.sample", false]], "set_tinystan_path() (in module tinystan)": [[16, "tinystan.set_tinystan_path", false]], "stan_version() (tinystan.model method)": [[16, "tinystan.Model.stan_version", false]], "stanoutput (class in tinystan)": [[16, "tinystan.StanOutput", false]], "tinystan_api_version (c++ function)": [[14, "_CPPv420tinystan_api_versionPiPiPi", false]], "tinystan_create_model (c++ function)": [[14, "_CPPv421tinystan_create_modelPKcjPP13TinyStanError", false]], "tinystan_destroy_error (c++ function)": [[14, "_CPPv422tinystan_destroy_errorP13TinyStanError", false]], "tinystan_destroy_model (c++ function)": [[14, "_CPPv422tinystan_destroy_modelP13TinyStanModel", false]], "tinystan_get_error_message (c++ function)": [[14, "_CPPv426tinystan_get_error_messagePK13TinyStanError", false]], "tinystan_get_error_type (c++ function)": [[14, "_CPPv423tinystan_get_error_typePK13TinyStanError", false]], "tinystan_laplace_sample (c++ function)": [[14, "_CPPv423tinystan_laplace_samplePK13TinyStanModelPKdPKcjibbiiPd6size_tPdPP13TinyStanError", false]], "tinystan_model_num_free_params (c++ function)": [[14, "_CPPv430tinystan_model_num_free_paramsPK13TinyStanModel", false]], "tinystan_model_param_names (c++ function)": [[14, "_CPPv426tinystan_model_param_namesPK13TinyStanModel", false]], "tinystan_optimize (c++ function)": [[14, "_CPPv417tinystan_optimizePK13TinyStanModelPKcjjd29TinyStanOptimizationAlgorithmibiddddddiiPd6size_tPP13TinyStanError", false]], "tinystan_pathfinder (c++ function)": [[14, "_CPPv419tinystan_pathfinderPK13TinyStanModel6size_tPKcjjdiiddddddiiibbiiPd6size_tPP13TinyStanError", false]], "tinystan_print_callback (c++ type)": [[14, "_CPPv423TINYSTAN_PRINT_CALLBACK", false]], "tinystan_sample (c++ function)": [[14, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", false]], "tinystan_separator_char (c++ function)": [[14, "_CPPv423tinystan_separator_charv", false]], "tinystan_set_print_callback (c++ function)": [[14, "_CPPv427tinystan_set_print_callback23TINYSTAN_PRINT_CALLBACK", false]], "tinystan_stan_version (c++ function)": [[14, "_CPPv421tinystan_stan_versionPiPiPi", false]], "tinystanerror (c++ type)": [[14, "_CPPv413TinyStanError", false]], "tinystanerrortype (c++ enum)": [[14, "_CPPv417TinyStanErrorType", false]], "tinystanerrortype::config (c++ enumerator)": [[14, "_CPPv4N17TinyStanErrorType6configE", false]], "tinystanerrortype::generic (c++ enumerator)": [[14, "_CPPv4N17TinyStanErrorType7genericE", false]], "tinystanerrortype::interrupt (c++ enumerator)": [[14, "_CPPv4N17TinyStanErrorType9interruptE", false]], "tinystanmetric (c++ enum)": [[14, "_CPPv414TinyStanMetric", false]], "tinystanmetric::dense (c++ enumerator)": [[14, "_CPPv4N14TinyStanMetric5denseE", false]], "tinystanmetric::diagonal (c++ enumerator)": [[14, "_CPPv4N14TinyStanMetric8diagonalE", false]], "tinystanmetric::unit (c++ enumerator)": [[14, "_CPPv4N14TinyStanMetric4unitE", false]], "tinystanmodel (c++ type)": [[14, "_CPPv413TinyStanModel", false]], "tinystanoptimizationalgorithm (c++ enum)": [[14, "_CPPv429TinyStanOptimizationAlgorithm", false]], "tinystanoptimizationalgorithm::bfgs (c++ enumerator)": [[14, "_CPPv4N29TinyStanOptimizationAlgorithm4bfgsE", false]], "tinystanoptimizationalgorithm::lbfgs (c++ enumerator)": [[14, "_CPPv4N29TinyStanOptimizationAlgorithm5lbfgsE", false]], "tinystanoptimizationalgorithm::newton (c++ enumerator)": [[14, "_CPPv4N29TinyStanOptimizationAlgorithm6newtonE", false]], "unit (tinystan.hmcmetric attribute)": [[16, "tinystan.HMCMetric.UNIT", false]]}, "objects": {"": [[14, 0, 1, "_CPPv423TINYSTAN_PRINT_CALLBACK", "TINYSTAN_PRINT_CALLBACK"], [14, 0, 1, "_CPPv413TinyStanError", "TinyStanError"], [14, 1, 1, "_CPPv417TinyStanErrorType", "TinyStanErrorType"], [14, 2, 1, "_CPPv4N17TinyStanErrorType6configE", "TinyStanErrorType::config"], [14, 2, 1, "_CPPv4N17TinyStanErrorType7genericE", "TinyStanErrorType::generic"], [14, 2, 1, "_CPPv4N17TinyStanErrorType9interruptE", "TinyStanErrorType::interrupt"], [14, 1, 1, "_CPPv414TinyStanMetric", "TinyStanMetric"], [14, 2, 1, "_CPPv4N14TinyStanMetric5denseE", "TinyStanMetric::dense"], [14, 2, 1, "_CPPv4N14TinyStanMetric8diagonalE", "TinyStanMetric::diagonal"], [14, 2, 1, "_CPPv4N14TinyStanMetric4unitE", "TinyStanMetric::unit"], [14, 0, 1, "_CPPv413TinyStanModel", "TinyStanModel"], [14, 1, 1, "_CPPv429TinyStanOptimizationAlgorithm", "TinyStanOptimizationAlgorithm"], [14, 2, 1, "_CPPv4N29TinyStanOptimizationAlgorithm4bfgsE", "TinyStanOptimizationAlgorithm::bfgs"], [14, 2, 1, "_CPPv4N29TinyStanOptimizationAlgorithm5lbfgsE", "TinyStanOptimizationAlgorithm::lbfgs"], [14, 2, 1, "_CPPv4N29TinyStanOptimizationAlgorithm6newtonE", "TinyStanOptimizationAlgorithm::newton"], [14, 2, 1, "_CPPv4N29TinyStanOptimizationAlgorithm4bfgsE", "bfgs"], [14, 2, 1, "_CPPv4N17TinyStanErrorType6configE", "config"], [14, 2, 1, "_CPPv4N14TinyStanMetric5denseE", "dense"], [14, 2, 1, "_CPPv4N14TinyStanMetric8diagonalE", "diagonal"], [14, 2, 1, "_CPPv4N17TinyStanErrorType7genericE", "generic"], [14, 2, 1, "_CPPv4N17TinyStanErrorType9interruptE", "interrupt"], [14, 2, 1, "_CPPv4N29TinyStanOptimizationAlgorithm5lbfgsE", "lbfgs"], [14, 2, 1, "_CPPv4N29TinyStanOptimizationAlgorithm6newtonE", "newton"], [14, 3, 1, "_CPPv420tinystan_api_versionPiPiPi", "tinystan_api_version"], [14, 4, 1, "_CPPv420tinystan_api_versionPiPiPi", "tinystan_api_version::major"], [14, 4, 1, "_CPPv420tinystan_api_versionPiPiPi", "tinystan_api_version::minor"], [14, 4, 1, "_CPPv420tinystan_api_versionPiPiPi", "tinystan_api_version::patch"], [14, 3, 1, "_CPPv421tinystan_create_modelPKcjPP13TinyStanError", "tinystan_create_model"], [14, 4, 1, "_CPPv421tinystan_create_modelPKcjPP13TinyStanError", "tinystan_create_model::data"], [14, 4, 1, "_CPPv421tinystan_create_modelPKcjPP13TinyStanError", "tinystan_create_model::err"], [14, 4, 1, "_CPPv421tinystan_create_modelPKcjPP13TinyStanError", "tinystan_create_model::seed"], [14, 3, 1, "_CPPv422tinystan_destroy_errorP13TinyStanError", "tinystan_destroy_error"], [14, 4, 1, "_CPPv422tinystan_destroy_errorP13TinyStanError", "tinystan_destroy_error::err"], [14, 3, 1, "_CPPv422tinystan_destroy_modelP13TinyStanModel", "tinystan_destroy_model"], [14, 4, 1, "_CPPv422tinystan_destroy_modelP13TinyStanModel", "tinystan_destroy_model::model"], [14, 3, 1, "_CPPv426tinystan_get_error_messagePK13TinyStanError", "tinystan_get_error_message"], [14, 4, 1, "_CPPv426tinystan_get_error_messagePK13TinyStanError", "tinystan_get_error_message::err"], [14, 3, 1, "_CPPv423tinystan_get_error_typePK13TinyStanError", "tinystan_get_error_type"], [14, 4, 1, "_CPPv423tinystan_get_error_typePK13TinyStanError", "tinystan_get_error_type::err"], [14, 3, 1, "_CPPv423tinystan_laplace_samplePK13TinyStanModelPKdPKcjibbiiPd6size_tPdPP13TinyStanError", "tinystan_laplace_sample"], [14, 4, 1, "_CPPv423tinystan_laplace_samplePK13TinyStanModelPKdPKcjibbiiPd6size_tPdPP13TinyStanError", "tinystan_laplace_sample::calculate_lp"], [14, 4, 1, "_CPPv423tinystan_laplace_samplePK13TinyStanModelPKdPKcjibbiiPd6size_tPdPP13TinyStanError", "tinystan_laplace_sample::err"], [14, 4, 1, "_CPPv423tinystan_laplace_samplePK13TinyStanModelPKdPKcjibbiiPd6size_tPdPP13TinyStanError", "tinystan_laplace_sample::hessian_out"], [14, 4, 1, "_CPPv423tinystan_laplace_samplePK13TinyStanModelPKdPKcjibbiiPd6size_tPdPP13TinyStanError", "tinystan_laplace_sample::jacobian"], [14, 4, 1, "_CPPv423tinystan_laplace_samplePK13TinyStanModelPKdPKcjibbiiPd6size_tPdPP13TinyStanError", "tinystan_laplace_sample::num_draws"], [14, 4, 1, "_CPPv423tinystan_laplace_samplePK13TinyStanModelPKdPKcjibbiiPd6size_tPdPP13TinyStanError", "tinystan_laplace_sample::num_threads"], [14, 4, 1, "_CPPv423tinystan_laplace_samplePK13TinyStanModelPKdPKcjibbiiPd6size_tPdPP13TinyStanError", "tinystan_laplace_sample::out"], [14, 4, 1, "_CPPv423tinystan_laplace_samplePK13TinyStanModelPKdPKcjibbiiPd6size_tPdPP13TinyStanError", "tinystan_laplace_sample::out_size"], [14, 4, 1, "_CPPv423tinystan_laplace_samplePK13TinyStanModelPKdPKcjibbiiPd6size_tPdPP13TinyStanError", "tinystan_laplace_sample::refresh"], [14, 4, 1, "_CPPv423tinystan_laplace_samplePK13TinyStanModelPKdPKcjibbiiPd6size_tPdPP13TinyStanError", "tinystan_laplace_sample::seed"], [14, 4, 1, "_CPPv423tinystan_laplace_samplePK13TinyStanModelPKdPKcjibbiiPd6size_tPdPP13TinyStanError", "tinystan_laplace_sample::theta_hat_constr"], [14, 4, 1, "_CPPv423tinystan_laplace_samplePK13TinyStanModelPKdPKcjibbiiPd6size_tPdPP13TinyStanError", "tinystan_laplace_sample::theta_hat_json"], [14, 4, 1, "_CPPv423tinystan_laplace_samplePK13TinyStanModelPKdPKcjibbiiPd6size_tPdPP13TinyStanError", "tinystan_laplace_sample::tmodel"], [14, 3, 1, "_CPPv430tinystan_model_num_free_paramsPK13TinyStanModel", "tinystan_model_num_free_params"], [14, 4, 1, "_CPPv430tinystan_model_num_free_paramsPK13TinyStanModel", "tinystan_model_num_free_params::model"], [14, 3, 1, "_CPPv426tinystan_model_param_namesPK13TinyStanModel", "tinystan_model_param_names"], [14, 4, 1, "_CPPv426tinystan_model_param_namesPK13TinyStanModel", "tinystan_model_param_names::model"], [14, 3, 1, "_CPPv417tinystan_optimizePK13TinyStanModelPKcjjd29TinyStanOptimizationAlgorithmibiddddddiiPd6size_tPP13TinyStanError", "tinystan_optimize"], [14, 4, 1, "_CPPv417tinystan_optimizePK13TinyStanModelPKcjjd29TinyStanOptimizationAlgorithmibiddddddiiPd6size_tPP13TinyStanError", "tinystan_optimize::algorithm"], [14, 4, 1, "_CPPv417tinystan_optimizePK13TinyStanModelPKcjjd29TinyStanOptimizationAlgorithmibiddddddiiPd6size_tPP13TinyStanError", "tinystan_optimize::err"], [14, 4, 1, "_CPPv417tinystan_optimizePK13TinyStanModelPKcjjd29TinyStanOptimizationAlgorithmibiddddddiiPd6size_tPP13TinyStanError", "tinystan_optimize::id"], [14, 4, 1, "_CPPv417tinystan_optimizePK13TinyStanModelPKcjjd29TinyStanOptimizationAlgorithmibiddddddiiPd6size_tPP13TinyStanError", "tinystan_optimize::init"], [14, 4, 1, "_CPPv417tinystan_optimizePK13TinyStanModelPKcjjd29TinyStanOptimizationAlgorithmibiddddddiiPd6size_tPP13TinyStanError", "tinystan_optimize::init_alpha"], [14, 4, 1, "_CPPv417tinystan_optimizePK13TinyStanModelPKcjjd29TinyStanOptimizationAlgorithmibiddddddiiPd6size_tPP13TinyStanError", "tinystan_optimize::init_radius"], [14, 4, 1, "_CPPv417tinystan_optimizePK13TinyStanModelPKcjjd29TinyStanOptimizationAlgorithmibiddddddiiPd6size_tPP13TinyStanError", "tinystan_optimize::jacobian"], [14, 4, 1, "_CPPv417tinystan_optimizePK13TinyStanModelPKcjjd29TinyStanOptimizationAlgorithmibiddddddiiPd6size_tPP13TinyStanError", "tinystan_optimize::max_history_size"], [14, 4, 1, "_CPPv417tinystan_optimizePK13TinyStanModelPKcjjd29TinyStanOptimizationAlgorithmibiddddddiiPd6size_tPP13TinyStanError", "tinystan_optimize::model"], [14, 4, 1, "_CPPv417tinystan_optimizePK13TinyStanModelPKcjjd29TinyStanOptimizationAlgorithmibiddddddiiPd6size_tPP13TinyStanError", "tinystan_optimize::num_iterations"], [14, 4, 1, "_CPPv417tinystan_optimizePK13TinyStanModelPKcjjd29TinyStanOptimizationAlgorithmibiddddddiiPd6size_tPP13TinyStanError", "tinystan_optimize::num_threads"], [14, 4, 1, "_CPPv417tinystan_optimizePK13TinyStanModelPKcjjd29TinyStanOptimizationAlgorithmibiddddddiiPd6size_tPP13TinyStanError", "tinystan_optimize::out"], [14, 4, 1, "_CPPv417tinystan_optimizePK13TinyStanModelPKcjjd29TinyStanOptimizationAlgorithmibiddddddiiPd6size_tPP13TinyStanError", "tinystan_optimize::out_size"], [14, 4, 1, "_CPPv417tinystan_optimizePK13TinyStanModelPKcjjd29TinyStanOptimizationAlgorithmibiddddddiiPd6size_tPP13TinyStanError", "tinystan_optimize::refresh"], [14, 4, 1, "_CPPv417tinystan_optimizePK13TinyStanModelPKcjjd29TinyStanOptimizationAlgorithmibiddddddiiPd6size_tPP13TinyStanError", "tinystan_optimize::seed"], [14, 4, 1, "_CPPv417tinystan_optimizePK13TinyStanModelPKcjjd29TinyStanOptimizationAlgorithmibiddddddiiPd6size_tPP13TinyStanError", "tinystan_optimize::tol_grad"], [14, 4, 1, "_CPPv417tinystan_optimizePK13TinyStanModelPKcjjd29TinyStanOptimizationAlgorithmibiddddddiiPd6size_tPP13TinyStanError", "tinystan_optimize::tol_obj"], [14, 4, 1, "_CPPv417tinystan_optimizePK13TinyStanModelPKcjjd29TinyStanOptimizationAlgorithmibiddddddiiPd6size_tPP13TinyStanError", "tinystan_optimize::tol_param"], [14, 4, 1, "_CPPv417tinystan_optimizePK13TinyStanModelPKcjjd29TinyStanOptimizationAlgorithmibiddddddiiPd6size_tPP13TinyStanError", "tinystan_optimize::tol_rel_grad"], [14, 4, 1, "_CPPv417tinystan_optimizePK13TinyStanModelPKcjjd29TinyStanOptimizationAlgorithmibiddddddiiPd6size_tPP13TinyStanError", "tinystan_optimize::tol_rel_obj"], [14, 3, 1, "_CPPv419tinystan_pathfinderPK13TinyStanModel6size_tPKcjjdiiddddddiiibbiiPd6size_tPP13TinyStanError", "tinystan_pathfinder"], [14, 4, 1, "_CPPv419tinystan_pathfinderPK13TinyStanModel6size_tPKcjjdiiddddddiiibbiiPd6size_tPP13TinyStanError", "tinystan_pathfinder::calculate_lp"], [14, 4, 1, "_CPPv419tinystan_pathfinderPK13TinyStanModel6size_tPKcjjdiiddddddiiibbiiPd6size_tPP13TinyStanError", "tinystan_pathfinder::err"], [14, 4, 1, "_CPPv419tinystan_pathfinderPK13TinyStanModel6size_tPKcjjdiiddddddiiibbiiPd6size_tPP13TinyStanError", "tinystan_pathfinder::id"], [14, 4, 1, "_CPPv419tinystan_pathfinderPK13TinyStanModel6size_tPKcjjdiiddddddiiibbiiPd6size_tPP13TinyStanError", "tinystan_pathfinder::init_alpha"], [14, 4, 1, "_CPPv419tinystan_pathfinderPK13TinyStanModel6size_tPKcjjdiiddddddiiibbiiPd6size_tPP13TinyStanError", "tinystan_pathfinder::init_radius"], [14, 4, 1, "_CPPv419tinystan_pathfinderPK13TinyStanModel6size_tPKcjjdiiddddddiiibbiiPd6size_tPP13TinyStanError", "tinystan_pathfinder::inits"], [14, 4, 1, "_CPPv419tinystan_pathfinderPK13TinyStanModel6size_tPKcjjdiiddddddiiibbiiPd6size_tPP13TinyStanError", "tinystan_pathfinder::max_history_size"], [14, 4, 1, "_CPPv419tinystan_pathfinderPK13TinyStanModel6size_tPKcjjdiiddddddiiibbiiPd6size_tPP13TinyStanError", "tinystan_pathfinder::model"], [14, 4, 1, "_CPPv419tinystan_pathfinderPK13TinyStanModel6size_tPKcjjdiiddddddiiibbiiPd6size_tPP13TinyStanError", "tinystan_pathfinder::num_draws"], [14, 4, 1, "_CPPv419tinystan_pathfinderPK13TinyStanModel6size_tPKcjjdiiddddddiiibbiiPd6size_tPP13TinyStanError", "tinystan_pathfinder::num_elbo_draws"], [14, 4, 1, "_CPPv419tinystan_pathfinderPK13TinyStanModel6size_tPKcjjdiiddddddiiibbiiPd6size_tPP13TinyStanError", "tinystan_pathfinder::num_iterations"], [14, 4, 1, "_CPPv419tinystan_pathfinderPK13TinyStanModel6size_tPKcjjdiiddddddiiibbiiPd6size_tPP13TinyStanError", "tinystan_pathfinder::num_multi_draws"], [14, 4, 1, "_CPPv419tinystan_pathfinderPK13TinyStanModel6size_tPKcjjdiiddddddiiibbiiPd6size_tPP13TinyStanError", "tinystan_pathfinder::num_paths"], [14, 4, 1, "_CPPv419tinystan_pathfinderPK13TinyStanModel6size_tPKcjjdiiddddddiiibbiiPd6size_tPP13TinyStanError", "tinystan_pathfinder::num_threads"], [14, 4, 1, "_CPPv419tinystan_pathfinderPK13TinyStanModel6size_tPKcjjdiiddddddiiibbiiPd6size_tPP13TinyStanError", "tinystan_pathfinder::out"], [14, 4, 1, "_CPPv419tinystan_pathfinderPK13TinyStanModel6size_tPKcjjdiiddddddiiibbiiPd6size_tPP13TinyStanError", "tinystan_pathfinder::out_size"], [14, 4, 1, "_CPPv419tinystan_pathfinderPK13TinyStanModel6size_tPKcjjdiiddddddiiibbiiPd6size_tPP13TinyStanError", "tinystan_pathfinder::psis_resample"], [14, 4, 1, "_CPPv419tinystan_pathfinderPK13TinyStanModel6size_tPKcjjdiiddddddiiibbiiPd6size_tPP13TinyStanError", "tinystan_pathfinder::refresh"], [14, 4, 1, "_CPPv419tinystan_pathfinderPK13TinyStanModel6size_tPKcjjdiiddddddiiibbiiPd6size_tPP13TinyStanError", "tinystan_pathfinder::seed"], [14, 4, 1, "_CPPv419tinystan_pathfinderPK13TinyStanModel6size_tPKcjjdiiddddddiiibbiiPd6size_tPP13TinyStanError", "tinystan_pathfinder::tol_grad"], [14, 4, 1, "_CPPv419tinystan_pathfinderPK13TinyStanModel6size_tPKcjjdiiddddddiiibbiiPd6size_tPP13TinyStanError", "tinystan_pathfinder::tol_obj"], [14, 4, 1, "_CPPv419tinystan_pathfinderPK13TinyStanModel6size_tPKcjjdiiddddddiiibbiiPd6size_tPP13TinyStanError", "tinystan_pathfinder::tol_param"], [14, 4, 1, "_CPPv419tinystan_pathfinderPK13TinyStanModel6size_tPKcjjdiiddddddiiibbiiPd6size_tPP13TinyStanError", "tinystan_pathfinder::tol_rel_grad"], [14, 4, 1, "_CPPv419tinystan_pathfinderPK13TinyStanModel6size_tPKcjjdiiddddddiiibbiiPd6size_tPP13TinyStanError", "tinystan_pathfinder::tol_rel_obj"], [14, 3, 1, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", "tinystan_sample"], [14, 4, 1, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", "tinystan_sample::adapt"], [14, 4, 1, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", "tinystan_sample::chain_id"], [14, 4, 1, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", "tinystan_sample::delta"], [14, 4, 1, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", "tinystan_sample::err"], [14, 4, 1, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", "tinystan_sample::gamma"], [14, 4, 1, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", "tinystan_sample::init_buffer"], [14, 4, 1, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", "tinystan_sample::init_inv_metric"], [14, 4, 1, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", "tinystan_sample::init_radius"], [14, 4, 1, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", "tinystan_sample::inits"], [14, 4, 1, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", "tinystan_sample::kappa"], [14, 4, 1, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", "tinystan_sample::max_depth"], [14, 4, 1, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", "tinystan_sample::metric_choice"], [14, 4, 1, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", "tinystan_sample::metric_out"], [14, 4, 1, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", "tinystan_sample::model"], [14, 4, 1, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", "tinystan_sample::num_chains"], [14, 4, 1, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", "tinystan_sample::num_samples"], [14, 4, 1, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", "tinystan_sample::num_threads"], [14, 4, 1, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", "tinystan_sample::num_warmup"], [14, 4, 1, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", "tinystan_sample::out"], [14, 4, 1, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", "tinystan_sample::out_size"], [14, 4, 1, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", "tinystan_sample::refresh"], [14, 4, 1, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", "tinystan_sample::save_warmup"], [14, 4, 1, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", "tinystan_sample::seed"], [14, 4, 1, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", "tinystan_sample::stepsize"], [14, 4, 1, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", "tinystan_sample::stepsize_jitter"], [14, 4, 1, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", "tinystan_sample::t0"], [14, 4, 1, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", "tinystan_sample::term_buffer"], [14, 4, 1, "_CPPv415tinystan_samplePK13TinyStanModel6size_tPKcjjdii14TinyStanMetricPKdbddddjjjbddiiiPd6size_tPdPP13TinyStanError", "tinystan_sample::window"], [14, 3, 1, "_CPPv423tinystan_separator_charv", "tinystan_separator_char"], [14, 3, 1, "_CPPv427tinystan_set_print_callback23TINYSTAN_PRINT_CALLBACK", "tinystan_set_print_callback"], [14, 4, 1, "_CPPv427tinystan_set_print_callback23TINYSTAN_PRINT_CALLBACK", "tinystan_set_print_callback::print"], [14, 3, 1, "_CPPv421tinystan_stan_versionPiPiPi", "tinystan_stan_version"], [14, 4, 1, "_CPPv421tinystan_stan_versionPiPiPi", "tinystan_stan_version::major"], [14, 4, 1, "_CPPv421tinystan_stan_versionPiPiPi", "tinystan_stan_version::minor"], [14, 4, 1, "_CPPv421tinystan_stan_versionPiPiPi", "tinystan_stan_version::patch"], [14, 2, 1, "_CPPv4N14TinyStanMetric4unitE", "unit"]], "tinystan": [[16, 5, 1, "", "HMCMetric"], [16, 5, 1, "", "Model"], [16, 5, 1, "", "OptimizationAlgorithm"], [16, 5, 1, "", "StanOutput"], [16, 9, 1, "", "compile_model"], [16, 9, 1, "", "set_tinystan_path"]], "tinystan.HMCMetric": [[16, 6, 1, "", "DENSE"], [16, 6, 1, "", "DIAGONAL"], [16, 6, 1, "", "UNIT"]], "tinystan.Model": [[16, 7, 1, "", "api_version"], [16, 7, 1, "", "laplace_sample"], [16, 7, 1, "", "optimize"], [16, 7, 1, "", "pathfinder"], [16, 7, 1, "", "sample"], [16, 7, 1, "", "stan_version"]], "tinystan.OptimizationAlgorithm": [[16, 6, 1, "", "BFGS"], [16, 6, 1, "", "LBFGS"], [16, 6, 1, "", "NEWTON"]], "tinystan.StanOutput": [[16, 7, 1, "", "create_inits"], [16, 8, 1, "", "data"], [16, 7, 1, "", "get"], [16, 8, 1, "", "parameters"]]}, "objnames": {"0": ["cpp", "type", "C++ type"], "1": ["cpp", "enum", "C++ enum"], "2": ["cpp", "enumerator", "C++ enumerator"], "3": ["cpp", "function", "C++ function"], "4": ["cpp", "functionParam", "C++ function parameter"], "5": ["py", "class", "Python class"], "6": ["py", "attribute", "Python attribute"], "7": ["py", "method", "Python method"], "8": ["py", "property", "Python property"], "9": ["py", "function", "Python function"]}, "objtypes": {"0": "cpp:type", "1": "cpp:enum", "2": "cpp:enumerator", "3": "cpp:function", "4": "cpp:functionParam", "5": "py:class", "6": "py:attribute", "7": "py:method", "8": "py:property", "9": "py:function"}, "terms": {"": [0, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17], "0": [1, 7, 8, 9, 10, 15, 16, 17], "001": [8, 9, 15, 16, 17], "05": [10, 15, 16, 17], "07": [8, 9, 17], "08": [8, 9, 16, 17], "0x1c": 14, "1": [0, 1, 5, 7, 8, 9, 10, 14, 15, 16, 17], "10": [10, 15, 16, 17], "1000": [7, 9, 10, 15, 16, 17], "10000": [8, 9, 16, 17], "10000000": 16, "12": [8, 9, 15, 16, 17], "14": 0, "1e": [8, 9, 15, 16, 17], "1e4": [15, 16], "1e7": [15, 16], "2": [0, 8, 9, 10, 14, 15, 16, 17], "2000": [8, 15, 16, 17], "25": [9, 10, 15, 16, 17], "3": [3, 4, 14, 16, 17], "4": [9, 10, 15, 16, 17], "5": [8, 9, 15, 16, 17], "50": [10, 15, 16, 17], "6": [14, 15], "75": [10, 15, 16, 17], "8": [10, 15, 16, 17], "9": 16, "A": [0, 5, 14, 16, 17], "At": 14, "By": [0, 6, 16], "For": [0, 5, 14, 16, 17], "If": [0, 5, 6, 14, 15, 16, 17], "In": 14, "It": [12, 14, 16], "No": [1, 14, 15, 16], "On": 0, "Or": [15, 16], "The": [0, 1, 14, 15, 16, 17], "These": 14, "To": [0, 15, 16, 17], "Will": 14, "__main__": 16, "__name__": 16, "about": [14, 15, 16], "abov": 0, "abstractarrai": 15, "abstractstr": 15, "accept": [14, 16], "access": 0, "activ": 1, "ad": 0, "adapt": [10, 14, 15, 16, 17], "add": [0, 14, 15, 16], "addit": [0, 5, 14, 15, 16, 17], "addition": 0, "after": [0, 14, 16], "against": 14, "aggress": 0, "algorithm": [1, 4, 7, 8, 9, 14, 15, 16, 17], "all": [0, 2, 14, 16], "alloc": 14, "allow": [0, 14], "alongsid": [15, 16], "alreadi": [15, 16], "also": [0, 14, 16], "amount": [14, 16], "an": [1, 2, 3, 4, 12, 14, 15, 16, 17], "ani": [14, 16], "api": [1, 2], "api_vers": 16, "appli": [14, 16], "appropri": [0, 14], "approxim": [7, 14, 15, 16, 17], "ar": [0, 5, 14, 15, 16, 17], "arbitrari": 0, "architectur": 0, "argument": [0, 14, 15, 16], "around": 14, "arrai": [14, 15, 16], "ascii": 14, "associ": 0, "assum": [15, 16, 17], "attribut": 16, "automat": [16, 17], "avail": [0, 16, 17], "averag": [14, 16], "back": 16, "bad": 14, "basic": 0, "becom": 14, "befor": [1, 16], "being": 14, "bernoulli": [10, 13, 15, 16, 17], "besid": 14, "between": [14, 16], "bfg": [4, 14, 15, 16, 17], "bin": 0, "bind": 1, "block": 14, "bool": [14, 15, 16], "both": 0, "bound": 14, "branch": 0, "brew": 17, "brian": 12, "bridgestan": [2, 14, 15], "buffer": 14, "build": 0, "built": [0, 14], "bward": 12, "c": [1, 2, 5, 17], "calcul": [14, 16], "calculate_lp": [7, 9, 14, 15, 16, 17], "call": [0, 6, 15, 16], "callback": [14, 16], "can": [0, 3, 4, 5, 14, 15, 16, 17], "capabl": [0, 15], "captur": 16, "capture_stan_print": 16, "carlo": [14, 16], "case": 14, "center": [14, 15, 16], "chain": [0, 14, 16], "chain_id": 14, "chang": [14, 15, 16], "char": 14, "charact": 14, "check": [5, 14, 15, 17], "choic": [0, 3, 4, 14, 15, 16, 17], "class": [3, 4, 5, 7, 8, 9, 10, 16], "client": [0, 2, 15, 16, 17], "clone": 0, "cmdstan": 0, "code": [14, 15, 16, 17], "com": [0, 15, 16, 17], "comma": 14, "command": 0, "compil": [0, 5, 12, 13, 14], "compile_model": [15, 16], "complet": 0, "conda": 17, "config": 14, "configur": 14, "consist": 0, "const": 14, "constrain": 14, "construct": 14, "constructor": 15, "consult": [0, 17], "contain": [0, 14, 16], "content": 0, "contextlib": 16, "converg": [14, 16], "copi": [0, 14, 15, 16, 17], "core": 2, "cout": 16, "cran": 17, "creat": [0, 5, 15, 16, 17], "create_init": 16, "ctrl": 14, "current": [2, 14, 15, 17], "custom": 1, "cxxflag": 0, "d": 0, "data": [3, 4, 7, 8, 9, 10, 13, 14, 15, 16, 17], "data_fil": [10, 13, 17], "dealloc": 14, "declar": [0, 14], "default": [0, 6, 16], "defin": [0, 5, 14, 15, 16, 17], "definit": 0, "delta": [10, 14, 15, 16, 17], "dens": [3, 14, 15, 16, 17], "densiti": [14, 16], "depend": [0, 14, 15, 16], "depth": [0, 14, 15, 16], "describ": [0, 14], "desir": 16, "dev": 15, "develop": [1, 16], "diagon": [3, 10, 14, 15, 16, 17], "dict": 16, "dictionari": 16, "differ": [14, 16], "dimens": 16, "dir": 0, "direct": 14, "directli": [15, 16], "directori": [0, 6, 15], "distinguish": 14, "distribut": 17, "doc": 16, "document": [0, 1, 14, 15, 16], "doe": [14, 16], "doubl": [14, 16], "download": [1, 6, 14, 15, 16, 17], "draw": [14, 15, 16], "drawn": [14, 16], "dure": 16, "e": [14, 16], "each": [14, 16], "easiest": 0, "edit": 0, "egg": 16, "either": [15, 16], "elbo": [14, 16], "empti": 14, "enabl": [5, 15, 16, 17], "encod": 14, "encount": 17, "end": 15, "enough": 14, "ensur": 0, "enum": 14, "enumer": 14, "environ": [6, 15, 16, 17], "equival": 15, "err": 14, "error": [5, 14, 15, 16, 17], "essenti": 14, "estim": [14, 15, 16], "evalu": [14, 16], "even": 16, "ex": 0, "exampl": [0, 2, 5, 14], "execut": 0, "exist": [15, 16], "explan": [15, 16], "expon": [14, 16], "expos": [2, 14], "extern": 14, "extract": 16, "fail": [14, 16], "fals": [7, 8, 10, 14, 15, 16, 17], "field": 14, "file": [0, 5, 10, 13, 14, 15, 16, 17], "filenotfounderror": 16, "final": 16, "find": [14, 15, 16], "first": [0, 14, 15, 16, 17], "fit": [10, 13, 16, 17], "flag": [0, 5, 15, 16, 17], "flatironinstitut": 12, "flatten": 14, "float": [15, 16], "float64": 15, "folder": [0, 6, 11, 15, 16, 17], "follow": [0, 14, 15, 16, 17], "foo": 14, "forg": 17, "fork": 0, "found": [15, 16], "four": 2, "free": 14, "freed": 14, "from": [0, 2, 3, 4, 12, 14], "function": [0, 2, 6, 12, 14, 15, 16], "g": 14, "gamma": [10, 14, 15, 16, 17], "gcc": 0, "gener": [14, 16], "get": [1, 14, 15, 16, 17], "get_tinystan_path": [6, 15], "getwd": 17, "git": [15, 16], "github": [0, 15, 16, 17], "gnu": [0, 16], "gradient": [14, 16], "greater": 14, "guid": [0, 14, 15, 16, 17], "h": 14, "ha": [0, 2, 15], "handl": 14, "have": [0, 14, 15, 16, 17], "here": [0, 5, 15, 16, 17], "hessian": [14, 16], "hessian_out": 14, "hidden": 15, "high": 14, "histori": [14, 16], "hit": 16, "hmc": [3, 14, 15, 16, 17], "hmcmetric": [10, 15, 16], "holder": 16, "home": [6, 15], "hpp": 0, "html": 16, "http": [0, 15, 16, 17], "i": [0, 1, 5, 6, 12, 14, 15, 16, 17], "id": [8, 9, 10, 14, 15, 16, 17], "ident": 14, "ignor": [14, 16], "impact": 16, "implement": 14, "impli": 16, "import": [14, 16], "includ": 0, "incomplet": 1, "individu": [14, 16], "infer": 15, "inflat": 15, "inform": [14, 15, 16], "init": [8, 9, 10, 14, 15, 16, 17], "init_alpha": [8, 9, 14, 15, 16, 17], "init_buff": [10, 14, 15, 16, 17], "init_inv_metr": [10, 14, 15, 16, 17], "init_radiu": [8, 9, 10, 14, 15, 16, 17], "initi": [14, 16], "insid": 15, "instal": [1, 2], "install_github": 17, "instanti": [14, 16], "instead": [15, 16, 17], "instruct": 0, "int": [14, 15, 16], "integ": 14, "intend": 14, "interest": 0, "interfac": 14, "intern": [14, 16], "internet": 0, "interpret": 14, "interrupt": 14, "interv": 16, "invalid": [14, 16], "invok": 0, "issu": 17, "iter": [14, 16], "its": [0, 14], "itself": 14, "jacobian": [7, 8, 14, 15, 16, 17], "jitter": [14, 16], "jl": 15, "json": [10, 13, 14, 15, 16, 17], "julia": [0, 1, 2], "jupyt": 16, "kappa": [10, 14, 15, 16, 17], "kei": 16, "kind": 14, "l": [14, 16], "languag": [0, 1], "laplac": [7, 14, 15, 16, 17], "laplace_sampl": [14, 15, 16], "larg": 14, "last": [14, 15], "later": 14, "lbfg": [4, 8, 14, 15, 16, 17], "lead": 16, "len": 14, "length": [3, 4, 14, 16, 17], "less": 0, "level": [0, 5, 11, 14, 15, 16, 17], "lib": [13, 17], "librari": [0, 1, 14, 15, 16], "like": [0, 14, 17], "likelihood": [15, 16], "line": 0, "linux": 0, "list": [3, 4, 14, 16, 17], "load": [13, 15, 16, 17], "local": [0, 5, 15, 16, 17], "locat": 16, "log": [14, 16], "longer": 14, "mac": 17, "maco": 0, "mai": [0, 14, 16, 17], "maintain": 12, "major": 14, "make": [0, 5, 15, 16, 17], "make_arg": [5, 13, 15, 16, 17], "makefil": [5, 15, 16, 17], "manag": 17, "mani": 0, "manual": [15, 16, 17], "map": [14, 15, 16], "march": 0, "mass": [14, 15, 16], "match": [6, 14, 15, 16], "math": 0, "matrix": [14, 15, 16], "max_depth": [10, 14, 15, 16, 17], "max_history_s": [8, 9, 14, 15, 16, 17], "maximum": [14, 15, 16], "mc": [12, 16], "mcmc": 16, "mean": [14, 15, 16], "messag": [14, 16], "metadata": 16, "method": [7, 8, 9, 10, 16, 17], "metric": [3, 10, 14, 15, 16, 17], "metric_choic": 14, "metric_out": 14, "mingw": 0, "minor": 14, "mle": [14, 15, 16], "mod": [10, 13, 17], "mode": [0, 7, 14, 15, 16, 17], "model": [0, 5, 7, 8, 9, 10, 13, 14], "mont": [14, 16], "more": [0, 14, 15, 16], "most": [1, 14], "mscv": 0, "msg": 14, "multi": [0, 14, 16], "multi_model": 0, "multidimension": 14, "multipl": 14, "must": [0, 14, 15, 16, 17], "n": 16, "name": [0, 14, 15, 16], "namespac": 14, "nativ": 0, "navig": 0, "ndarrai": 16, "necessari": [12, 13, 15, 16, 17], "need": [14, 16, 17], "new": [0, 14, 16], "newton": [4, 14, 15, 16, 17], "non": 14, "none": 16, "norm": [14, 16], "note": [14, 15, 16, 17], "noth": 15, "np": 16, "null": [5, 7, 8, 9, 10, 13, 14, 17], "nullabl": 14, "num_chain": [10, 14, 15, 16, 17], "num_draw": [7, 9, 14, 15, 16, 17], "num_elbo_draw": [9, 14, 15, 16, 17], "num_iter": [8, 9, 14, 15, 16, 17], "num_multi_draw": [9, 14, 15, 16, 17], "num_param": 14, "num_path": [9, 14, 15, 16, 17], "num_sampl": [10, 14, 15, 16, 17], "num_thread": [7, 8, 9, 10, 14, 15, 16, 17], "num_warmup": [10, 14, 15, 16, 17], "number": [14, 16], "numpi": 16, "nut": [1, 10, 14, 15, 16, 17], "o": [0, 16], "o1": [0, 5, 15, 16, 17], "o3": 0, "obj": 16, "object": [0, 3, 4, 12, 14, 15, 17], "obtain": 15, "occur": [14, 15], "offici": 17, "offset": [14, 16], "often": 15, "one": [14, 15, 16, 17], "opaqu": 14, "open": 0, "optim": [0, 4, 5, 14, 15, 16], "optimizationalgorithm": [8, 15, 16], "optimum": 15, "option": [1, 16], "order": 0, "org": [12, 16], "other": [0, 14, 16], "otherwis": [14, 15], "our": 0, "out": [14, 16], "out_siz": 14, "output": 14, "overrid": 0, "own": 14, "packag": [0, 10, 12, 13, 15, 16, 17], "page": 0, "parallel": [14, 16], "param": 14, "param_nam": 15, "paramet": [14, 15, 16], "pareto": [14, 16], "pass": [0, 5, 15, 16, 17], "patch": 14, "path": [0, 5, 11, 14, 15, 16, 17], "pathfind": [14, 15, 16], "pathlik": 16, "pedant": 0, "perform": 16, "perman": 0, "permissionerror": 16, "persist": 0, "pf": 16, "pip": 16, "place": [0, 17], "platform": 0, "pleas": 14, "plug": 0, "point": [0, 11, 16, 17], "pointer": 14, "posterior": [14, 15, 16], "posteriori": [15, 16], "pre": [14, 15, 16, 17], "preced": [5, 15, 16, 17], "prefer": 17, "presenc": 16, "primarili": 0, "print": [14, 16], "println": 15, "probabl": [14, 16], "program": [2, 12], "progress": [14, 16], "project": [1, 17], "properti": 16, "provid": [1, 12, 14, 15, 16], "psis_resampl": [9, 14, 15, 16, 17], "public": 2, "purpos": 14, "py": 16, "python": [0, 1, 2], "quantiti": 14, "queri": 14, "r": [0, 1, 2], "radiu": [14, 16], "rais": 16, "random": [14, 16], "rang": 16, "raw": 16, "re": [15, 16], "readabl": 16, "recommend": 1, "recurs": 0, "redirect_stdout": 16, "reduc": 0, "ref": 17, "refer": 2, "refresh": [7, 8, 9, 10, 14, 15, 16, 17], "regular": [14, 16], "rel": [14, 16], "relax": [14, 16], "releas": 1, "remot": 17, "repl": 15, "repo": 17, "report": [16, 17], "repositori": [0, 11, 15, 16, 17], "repres": 14, "requir": [1, 14, 16, 17], "requisit": [14, 15, 16, 17], "retriev": 14, "return": [14, 15, 16], "run": [0, 5, 7, 8, 9, 10, 12, 14, 15, 16, 17], "runtim": 14, "runtimeerror": 16, "s3": [7, 8, 9, 10, 17], "same": [0, 2, 5, 14, 15, 16, 17], "sampl": [1, 14, 15, 16], "sampler": [1, 13, 14, 15, 16], "save": [14, 16], "save_hessian": [7, 15, 16, 17], "save_metr": [10, 15, 16, 17], "save_warmup": [10, 14, 15, 16, 17], "scale": [14, 16], "section": [0, 15, 17], "see": [0, 15, 16], "seed": [7, 8, 9, 10, 14, 15, 16, 17], "seen": 16, "select": [3, 4, 17], "sent": 16, "separ": [0, 14], "servic": 14, "set": [0, 5, 6, 11, 14, 15, 16, 17], "set_tinystan_path": [5, 6, 15, 16], "sever": 14, "shallow": 0, "shape": 16, "share": [0, 15, 16], "should": [11, 14, 16, 17], "show": [15, 16], "simpl": 0, "simpli": 0, "sinc": [15, 16], "singl": 16, "size": [0, 14, 15, 16], "size_t": 14, "smooth": [14, 16], "so": [0, 5, 14, 15, 16, 17], "some": [14, 16], "someth": 0, "sourc": [0, 14], "specif": [14, 16, 17], "specifi": [14, 15, 16], "squar": 14, "stabl": 1, "stan": [5, 7, 8, 9, 10, 13, 14, 15, 16, 17], "stan_fil": [5, 15, 16, 17], "stan_thread": [5, 15, 16, 17], "stan_vers": 16, "stanc": 0, "stanc3": [0, 5, 15, 16, 17], "stanc_arg": [5, 13, 15, 16, 17], "stancflag": 0, "standalon": 2, "standata": 16, "stanmodel": [5, 15, 17], "stanoutput": 16, "start": [1, 14, 15, 16, 17], "statement": 16, "statist": 15, "statu": 14, "stdout": 14, "step": [14, 16], "stepsiz": [10, 14, 15, 16, 17], "stepsize_jitt": [10, 14, 15, 16, 17], "still": [1, 17], "store": 14, "str": 16, "string": [14, 15, 16], "struct": 14, "structur": [15, 16], "subdir": 17, "subdirectori": 16, "submodul": 0, "success": 14, "suitabl": 16, "suppli": 15, "support": 0, "suppress": [15, 16], "supress": 16, "synonym": 16, "system": [10, 13, 17], "t0": [10, 14, 15, 16, 17], "take": [5, 15, 16, 17], "target": [14, 16], "term_buff": [10, 14, 15, 16, 17], "termin": 0, "test_model": [0, 15, 16], "than": 14, "thei": [14, 16], "them": [0, 16], "theta": [15, 16], "theta_hat_constr": 14, "theta_hat_json": 14, "thi": [0, 1, 5, 6, 11, 14, 15, 16, 17], "those": [0, 14, 16], "thread": [5, 14, 15, 16, 17], "time": [0, 15, 16, 17], "tinystan": [5, 10, 11, 13, 14, 15, 16, 17], "tinystan_api_vers": 14, "tinystan_create_model": 14, "tinystan_destroy_error": 14, "tinystan_destroy_model": 14, "tinystan_get_error_messag": 14, "tinystan_get_error_typ": 14, "tinystan_laplace_sampl": 14, "tinystan_model": [7, 8, 9, 10], "tinystan_model_num_free_param": 14, "tinystan_model_param_nam": 14, "tinystan_no_bounds_check": 14, "tinystan_optim": 14, "tinystan_pathfind": 14, "tinystan_print_callback": 14, "tinystan_sampl": 14, "tinystan_separator_char": 14, "tinystan_set_print_callback": 14, "tinystan_stan_vers": 14, "tinystanerror": 14, "tinystanerrortyp": 14, "tinystanmetr": 14, "tinystanmodel": 14, "tinystanoptimizationalgorithm": 14, "tmodel": 14, "tol_grad": [8, 9, 14, 15, 16, 17], "tol_obj": [8, 9, 14, 15, 16, 17], "tol_param": [8, 9, 14, 15, 16, 17], "tol_rel_grad": [8, 9, 14, 15, 16, 17], "tol_rel_obj": [8, 9, 14, 15, 16, 17], "toler": [14, 16], "tool": 0, "toolchain": 1, "top": [11, 16, 17], "transform": 14, "tree": [14, 16], "true": [5, 7, 9, 10, 13, 14, 15, 16, 17], "tupl": 15, "turn": [1, 14, 15, 16], "type": [14, 15, 16, 17], "typedef": 14, "u": [1, 14, 15, 16], "uint32": 15, "unconstrain": 16, "undefin": 0, "under": [1, 15], "underli": [2, 16], "uniformli": 16, "union": [15, 16], "unit": [3, 14, 15, 16, 17], "unless": 14, "unrecover": 16, "unsign": 14, "unspecifi": [14, 16], "unzip": 0, "updat": 0, "us": [1, 5, 14, 15, 16, 17], "user": [0, 1, 6, 12, 14, 15, 17], "user_head": 0, "util": 0, "v0": 17, "valid": [5, 15, 16, 17], "valu": [6, 14, 15, 16], "valueerror": 16, "variabl": [0, 6, 14, 15, 16, 17], "variou": 14, "ve": [15, 16, 17], "vector": [5, 14, 15, 17], "version": [5, 6, 14, 15, 16, 17], "void": 14, "wa": [14, 16], "wai": 0, "ward": 12, "wardbrian": [0, 15, 16, 17], "warmup": [14, 16], "warn": [0, 13, 15, 16, 17], "we": 0, "webassembli": 14, "websit": 17, "were": 16, "when": [0, 14, 16, 17], "whether": [14, 16], "which": [2, 14, 16], "while": 17, "window": [0, 10, 14, 15, 16, 17], "wish": 0, "within": [14, 15, 16], "without": 0, "would": 0, "wrap": 14, "wrapper": 14, "written": 2, "y": 16, "yet": 1, "you": [0, 14, 15, 16, 17], "your": [0, 15, 17], "zero": 14}, "titles": ["Getting Started", "TinyStan \u2013 A lightweight Stan interface", "Language Interfaces", "Enumeration <code class=\"docutils literal notranslate\"><span class=\"pre\">HMCMetric</span></code>", "Enumeration <code class=\"docutils literal notranslate\"><span class=\"pre\">OptimizationAlgorithm</span></code>", "Function <code class=\"docutils literal notranslate\"><span class=\"pre\">compile_model()</span></code>", "Get the path to TinyStan.", "Generic function <code class=\"docutils literal notranslate\"><span class=\"pre\">laplace_sampler</span></code>", "Generic function <code class=\"docutils literal notranslate\"><span class=\"pre\">optimizer</span></code>", "Generic function <code class=\"docutils literal notranslate\"><span class=\"pre\">pathfinder</span></code>", "Generic function <code class=\"docutils literal notranslate\"><span class=\"pre\">sampler</span></code>", "Function <code class=\"docutils literal notranslate\"><span class=\"pre\">set_tinystan_path()</span></code>", "tinystan: A tiny interface to Stan algorithms", "Class <code class=\"docutils literal notranslate\"><span class=\"pre\">tinystan_model</span></code>", "C API", "Julia Interface", "Python Interface", "R Interface"], "titleterms": {"": 12, "A": [1, 12], "algorithm": 12, "also": [5, 6, 17], "an": 0, "api": [14, 15, 16, 17], "archiv": 0, "argument": [5, 17], "author": 12, "c": [0, 14], "class": [13, 17], "code": 0, "compil": [15, 16, 17], "compile_model": [5, 17], "content": 1, "custom": 0, "detail": [5, 6, 11, 12, 17], "download": 0, "enumer": [3, 4, 17], "exampl": [10, 13, 15, 16, 17], "exist": 0, "extern": 0, "format": [3, 4, 17], "from": [15, 16, 17], "function": [5, 7, 8, 9, 10, 11, 17], "gener": [7, 8, 9, 10, 17], "get": [0, 6], "git": 0, "hmcmetric": [3, 17], "infer": 16, "insid": 17, "instal": [0, 14, 15, 16, 17], "interfac": [0, 1, 2, 12, 15, 16, 17], "julia": 15, "languag": 2, "laplace_sampl": [7, 17], "latest": 0, "lightweight": 1, "model": [15, 16, 17], "object": 16, "optim": [8, 17], "optimizationalgorithm": [4, 17], "option": 0, "output": 16, "path": 6, "pathfind": [9, 17], "pre": 0, "program": [15, 16], "python": 16, "r": 17, "refer": [14, 15, 16, 17], "releas": 0, "requir": 0, "return": [5, 17], "sampler": [10, 17], "see": [5, 6, 17], "set_tinystan_path": [11, 17], "sourc": [15, 16, 17], "stan": [0, 1, 12], "start": 0, "test": 0, "tini": 12, "tinystan": [0, 1, 6, 12], "tinystan_model": [13, 17], "toolchain": 0, "us": 0, "util": [15, 16, 17], "version": 0}})